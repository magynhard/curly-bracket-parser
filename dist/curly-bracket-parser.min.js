/**
 * curly-bracket-parser
 *
 * Simple parser to replace variables inside templates/strings and files
 *
 * @version 1.3.4
 * @date 2023-03-07T13:35:58.669Z
 * @link https://github.com/magynhard/curly-bracket-parser
 * @author Matthäus J. N. Beyrle
 * @copyright Matthäus J. N. Beyrle
 */
var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function a(e,r){for(var t=0;t<r.length;t++){var a=r[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(e,r,t){return r&&a(e.prototype,r),t&&a(e,t),e}}();function _possibleConstructorReturn(e,r){if(e)return!r||"object"!=typeof r&&"function"!=typeof r?e:r;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}function _inherits(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function, not "+typeof r);e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),r&&(Object.setPrototypeOf?Object.setPrototypeOf(e,r):e.__proto__=r)}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var CurlyBracketParser=function(){function CurlyBracketParser(){_classCallCheck(this,CurlyBracketParser)}return _createClass(CurlyBracketParser,null,[{key:"getVersion",value:function(){return CurlyBracketParser._version}},{key:"parse",value:function parse(string){var variables=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{unresolved_vars:"throw",replace_pattern:"##$1##"},self=CurlyBracketParser;if(!Typifier.isString(string))throw new Error("Given parameter 'string' must be of type 'string'! It is of type "+Typifier.getType(string)+": "+string+"\n");var options=options||{},default_options={unresolved_vars:"throw",replace_pattern:"##$1##"},seen=(options=Object.assign(default_options,options),variables=variables||{},[]),result_string=string;if(self.isAnyVariableIncluded(string)){for(;;){var circleIndex=0,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=self.variables(result_string)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var string_var=_step.value,string_var_key=string_var+":"+circleIndex++;if(-1<seen.indexOf(string_var_key))throw new CircularReferenceError("Circular reference: "+string_var);seen.push(string_var_key);var decoded_var=self.decodeVariable(string_var),name=decoded_var.name||0===decoded_var.name?decoded_var.name:"''",filter=decoded_var.filter,value=null,is_single_quoted=name.startsWith("'")&&name.endsWith("'"),is_double_quoted=name.startsWith('"')&&name.endsWith('"'),current_value,current_value,value;is_double_quoted||is_single_quoted?value=name.substring(1,name.length-1):Typifier.isNumberString(name)?value=eval(name):variables.hasOwnProperty(name)||self._isTreeVariableString(name)&&self._hasTreeProperty(variables,name)?(current_value=null,current_value=self._isTreeVariableString(name)?self._extractTreeVariable(variables,name):variables[name],value=Typifier.isUndefined(current_value)||Typifier.isNaN(current_value)||Typifier.isNull(current_value)||Typifier.isInfinity(current_value)?"":current_value):self.isRegisteredDefaultVar(name)&&(value=self.processDefaultVar(name)),null!==value&&(filter&&(value=self.processFilter(filter,value)),result_string=self._replaceAll(result_string,string_var,value))}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}if(!self.isAnyVariableIncluded(result_string)||!self.includesOneVariableOf(Object.keys(variables),result_string))break}switch(options.unresolved_vars){case"throw":if(self.isAnyVariableIncluded(result_string))throw new UnresolvedVariablesError("There are unresolved variables in the given string: "+self.variables(result_string));break;case"replace":result_string=result_string.replace(self.VARIABLE_DECODER_REGEX,options.replace_pattern)}}return result_string}},{key:"parseFile",value:function(e){var r,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},a=CurlyBracketParser,n=(n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{unresolved_vars:"throw",replace_pattern:"##$1##",success:null,write:!1})||{};if(n=Object.assign({unresolved_vars:"throw",replace_pattern:"##$1##",success:null,write:!1},n),t=t||{},a._runByNode())return r=(l=require("fs")).readFileSync(e,"utf-8").toString(),r=a.parse(r,t,n),n.write&&l.writeFileSync(e,r),r;if(a._runByBrowser()){var i,s="Could not retrieve file '"+e+"' by GET.";if(n.success&&"function"==typeof n.success)return(i=new XMLHttpRequest).open("GET",e,!0),i.onload=function(e){if(4!==i.readyState)throw new FileNotRetrievedError(s);if(200!==i.status)throw new FileNotRetrievedError(s+"\n"+i.statusText);var r=a.parse(i.responseText,t,n);n.success(r)},i.send(null),null;var l=new XMLHttpRequest;if(l.open("GET",e,!1),l.send(null),200===l.status)return a.parse(l.responseText,t,n);throw new FileNotRetrievedError(s+"\n"+l.statusText)}}},{key:"parseFileWrite",value:function(e){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{unresolved_vars:"throw",replace_pattern:"##$1##"},a=CurlyBracketParser;if((t=t||{}).write=!0,a._runByNode())return a.parseFile(e,r,t);throw"This method can only be run on node js, not in browser."}},{key:"registerFilter",value:function(e,r){var t=CurlyBracketParser;if(t.isValidFilter(e))throw new FilterAlreadyRegisteredError("The given filter name '"+e+"' is already registered");if("function"!=typeof r)throw"Given parameter 'filter_function' must be of type 'function'. It is of type '"+(void 0===r?"undefined":_typeof(r))+"'.";t.registered_filters[e]=r}},{key:"processFilter",value:function(e,r){var t=CurlyBracketParser;if(t.registered_filters[e])return t.registered_filters[e](r);if("undefined"!=typeof LuckyCase&&t.VALID_DEFAULT_FILTERS().includes(LuckyCase.toUpperCase(e))&&LuckyCase.isValidCaseType(LuckyCase.toUpperCase(e)))return LuckyCase.convertCase(r,LuckyCase.toUpperCase(e));throw r="Invalid filter '"+e+"'. Valid filters are: "+t.validFilters().join(" "),new InvalidFilterError(r)}},{key:"validFilters",value:function(){var e=CurlyBracketParser,r=e.VALID_DEFAULT_FILTERS(),t=Object.keys(e.registered_filters),e=e.VALID_DEFAULT_FILTERS().map(function(e){return e.toLocaleLowerCase()});return r.concat(t).concat(e)}},{key:"isValidFilter",value:function(e){return CurlyBracketParser.validFilters().includes(e)}},{key:"registerDefaultVar",value:function(e,r){var t=CurlyBracketParser,a=(a=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{overwrite:!1})||{};if(a=Object.assign({unresolved_vars:"throw",replace_pattern:"##$1##"},a),t.isRegisteredDefaultVar(e)&&!1===a.overwrite)throw new VariableAlreadyRegisteredError("The given variable name '"+e+"' is already registered. If you want to override that variable explicitly, use option 'overwrite: true'!");if("function"==typeof r)return t.registered_default_vars[e]=r;throw"Given parameter 'var_function' must be of type 'function'. It is of type '"+(void 0===r?"undefined":_typeof(r))+"'."}},{key:"processDefaultVar",value:function(e){var r=CurlyBracketParser;if(r.registered_default_vars[e])return r.registered_default_vars[e]();throw e="Invalid default variable '"+e+"'. Valid registered default variables are: "+Object.keys(r.registered_default_vars).join(" "),new InvalidVariableError(e)}},{key:"unregisterDefaultVar",value:function(e){var r=CurlyBracketParser;return!!r.registered_default_vars[e]&&(delete r.registered_default_vars[e],!0)}},{key:"registeredDefaultVars",value:function(){return Object.keys(CurlyBracketParser.registered_default_vars)}},{key:"isRegisteredDefaultVar",value:function(e){return CurlyBracketParser.registeredDefaultVars().includes(e)}},{key:"decodeVariable",value:function(e){return CurlyBracketParser.decodedVariables(e)[0]}},{key:"decodedVariables",value:function(e){var r=CurlyBracketParser,t=[];for(r.VARIABLE_DECODER_REGEX.lastIndex=0;;){var a=r.VARIABLE_DECODER_REGEX.exec(e);if(!a){r.VARIABLE_DECODER_REGEX.lastIndex=0;break}a={name:a[1].trim(),filter:""!==a[2].trim()?a[2].trim():null};t.push(a)}return t}},{key:"variables",value:function(e){return e.match(CurlyBracketParser.VARIABLE_REGEX).flat()}},{key:"isAnyVariableIncluded",value:function(e){return null!==e.match(CurlyBracketParser.VARIABLE_REGEX)}},{key:"includesOneVariableOf",value:function(e,r){var t=CurlyBracketParser,a=!0,n=!1,i=void 0;try{for(var s,l=t.decodedVariables(r)[Symbol.iterator]();!(a=(s=l.next()).done);a=!0){var o=s.value;if(e.includes(o.name))return!0}}catch(e){n=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(n)throw i}}return!1}},{key:"_replaceAll",value:function(e,r,t){return e.split(r).join(t)}},{key:"_runByNode",value:function(){return"undefined"!=typeof module&&module.exports}},{key:"_runByBrowser",value:function(){return!CurlyBracketParser._runByNode()}},{key:"_isTreeVariableString",value:function(e){var r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{throw_error_on_false:!1},t=!!e.trim().match(/^[^\.]([^\.]*\.[^\.]+)+$/i);if(!t&&r&&r.throw_error_on_false)throw new InvalidTreeVariableStringError(e);return t}},{key:"_extractTreeVariable",value:function(e,r){CurlyBracketParser._isTreeVariableString(r,{throw_error_on_false:!0});for(var t=r.split("."),a=e,n=0;n<t.length;++n){if(!a.hasOwnProperty(t[n]))throw new TreeVariableNotFoundError("Tree variable not found: '"+r+"'");a=a[t[n]]}return a}},{key:"_hasTreeProperty",value:function(e,r){var t=CurlyBracketParser;t._isTreeVariableString(r,{throw_error_on_false:!0});try{return t._extractTreeVariable(e,r),!0}catch(e){if(e instanceof TreeVariableNotFoundError)return!1;throw e}}}]),CurlyBracketParser}(),FileNotRetrievedError=(CurlyBracketParser._version="1.3.4",CurlyBracketParser.registered_filters={},CurlyBracketParser.registered_default_vars={},CurlyBracketParser.VARIABLE_DECODER_REGEX=/{{([^{}\|]*)\|?([^{}\|]*)}}/gms,CurlyBracketParser.VARIABLE_REGEX=/{{[^{}]*}}/gms,CurlyBracketParser.VALID_DEFAULT_FILTERS=function(){return"undefined"!=typeof LuckyCase?Object.keys(LuckyCase.CASES):[]},function(){function r(e){_classCallCheck(this,r);e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return e.name="FileNotRetrievedError",e}return _inherits(r,Error),r}()),FilterAlreadyRegisteredError=function(){function r(e){_classCallCheck(this,r);e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return e.name="FilterAlreadyRegisteredError",e}return _inherits(r,Error),r}(),InvalidFilterError=function(){function r(e){_classCallCheck(this,r);e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return e.name="InvalidFilterError",e}return _inherits(r,Error),r}(),InvalidTreeVariableStringError=function(){function r(e){_classCallCheck(this,r);e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return e.name="InvalidTreeVariableStringError",e}return _inherits(r,Error),r}(),InvalidVariableError=function(){function r(e){_classCallCheck(this,r);e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return e.name="InvalidVariableError",e}return _inherits(r,Error),r}(),TreeVariableNotFoundError=function(){function r(e){_classCallCheck(this,r);e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return e.name="TreeVariableNotFoundError",e}return _inherits(r,Error),r}(),UnresolvedVariablesError=function(){function r(e){_classCallCheck(this,r);e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return e.name="UnresolvedVariablesError",e}return _inherits(r,Error),r}(),VariableAlreadyRegisteredError=function(){function r(e){_classCallCheck(this,r);e=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return e.name="VariableAlreadyRegisteredError",e}return _inherits(r,Error),r}();